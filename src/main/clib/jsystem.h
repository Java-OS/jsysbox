/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ir_moke_jsysbox_system_JSystem */

#ifndef _Included_ir_moke_jsysbox_system_JSystem
#define _Included_ir_moke_jsysbox_system_JSystem
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    reboot
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_system_JSystem_reboot();

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    shutdown
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_system_JSystem_shutdown();

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    umount
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ir_moke_jsysbox_system_JSystem_chroot
  (JNIEnv *, jclass, jstring);


/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    setEnv
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ir_moke_jsysbox_system_JSystem_setEnv
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    unSetEnv
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ir_moke_jsysbox_system_JSystem_unSetEnv
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    getEnv
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ir_moke_jsysbox_system_JSystem_getEnv
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    envList
 * Signature: ()V
 */
JNIEXPORT jobject JNICALL Java_ir_moke_jsysbox_system_JSystem_envList
    (JNIEnv *, jclass);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    setHostname
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_system_JSystem_setHostname
    (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    getHostname
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jstring JNICALL Java_ir_moke_jsysbox_system_JSystem_getHostname
    (JNIEnv *, jclass);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    getFilesystemStatistics
 * Signature: (Ljava/lang/String;)Z
 * */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_system_JSystem_kill
    (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    insmod
 * Signature: (Ljava/lang/String;[Ljava/lang/String;)Z
 * */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_system_JSystem_insmod
    (JNIEnv *, jclass, jstring, jobjectArray);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    insmod
 * Signature: (Ljava/lang/String;)Z
 * */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_system_JSystem_rmmod
    (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    modinfo
 * Signature: (Ljava/lang/String;)Ljava/util/HashMap;
 * */
JNIEXPORT jobject JNICALL Java_ir_moke_jsysbox_system_JSystem_modinfo
    (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    setUlimit
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_system_JSystem_setUlimit
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     ir_moke_jsysbox_system_JSystem
 * Method:    getUlimit
 * Signature: (IZ)I;
 */
JNIEXPORT jint JNICALL Java_ir_moke_jsysbox_system_JSystem_getUlimit
  (JNIEnv *, jclass, jint, jboolean);

#ifdef __cplusplus
}
#endif
#endif
