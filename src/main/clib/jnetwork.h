/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ir_moke_jsysbox_network_JNetwork */

#ifndef _Included_ir_moke_jsysbox_network_JNetwork
#define _Included_ir_moke_jsysbox_network_JNetwork
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     ir_moke_jsysbox_network_JNetwork
 * Method:    setIp
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_network_JNetwork_setIp
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     ir_moke_jsysbox_network_JNetwork
 * Method:    ifUp
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_network_JNetwork_ifUp
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_network_JNetwork
 * Method:    ifDown
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_network_JNetwork_ifDown
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_network_JNetwork
 * Method:    updateRoute
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZ)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_network_JNetwork_updateRoute
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring, jint, jboolean, jboolean);

/*
 * Class:     ir_moke_jsysbox_network_JNetwork
 * Method:    initResolve
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_network_JNetwork_initResolve();

/*
 * Class:     ir_moke_jsysbox_network_JNetwork
 * Method:    availableEthernetList
 * Signature: ()Ljava/util/Set;
 */
JNIEXPORT jobjectArray JNICALL Java_ir_moke_jsysbox_network_JNetwork_availableEthernetList
        (JNIEnv *, jclass);

/*
 * Class:     ir_moke_jsysbox_network_JNetwork
 * Method:    activeEthernetList
 * Signature: ()Ljava/util/Set;
 */
JNIEXPORT jobjectArray JNICALL Java_ir_moke_jsysbox_network_JNetwork_activeEthernetList
        (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
