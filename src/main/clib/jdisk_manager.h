/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ir_moke_jsysbox_disk_JDiskManager */

#ifndef _Included_ir_moke_jsysbox_disk_JDiskManager
#define _Included_ir_moke_jsysbox_disk_JDiskManager
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    mount
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_mount
  (JNIEnv *, jclass, jstring, jstring, jstring, jint, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    umount
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_umount
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    getFilesystemStatistics
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_getDisks
  (JNIEnv *, jclass);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    getFilesystemStatistics
 * Signature: (Ljava/lang/String;)Lir/moke/jsysbox/disk/HDDPartition;
 */
JNIEXPORT jobjectArray JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_getPartitionInformation
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    swapOn
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_swapOn
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    swapOff
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_swapOff
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    partitionTableType
 * Signature: (Ljava/lang/String;)Lir/moke/jsysbox/disk/PartitionTable;
 */
JNIEXPORT jobject JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_partitionTableType
  (JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    initializePartitionTable
 * Signature: (Ljava/lang/String;Lir/moke/jsysbox/disk/PartitionTable;)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_initializePartitionTable
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    createPartition
 * Signature: (Ljava/lang/String;JJLir/moke/jsysbox/disk/FilesystemType;)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_createPartition
  (JNIEnv *, jclass, jstring, jlong, jlong, jobject, jboolean);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    deletePartition
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_deletePartition
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    bootable
 * Signature: (Ljava/lang/Stringa;I)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_bootable
  (JNIEnv *, jclass, jstring, jint);


#ifdef __cplusplus
}
#endif
#endif
