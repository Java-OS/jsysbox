/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ir_moke_jsysbox_disk_JDiskManager */

#ifndef _Included_ir_moke_jsysbox_disk_JDiskManager
#define _Included_ir_moke_jsysbox_disk_JDiskManager
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    mount
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_mount(JNIEnv *, jclass, jstring, jstring, jstring, jint, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    umount
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_umount(JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    disks
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_disks(JNIEnv *, jclass);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    partitionType
 * Signature: (Ljava/lang/String;I)Lir/moke/jsysbox/disk/PartitionType;
 */
JNIEXPORT jobject JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_partitionType(JNIEnv *, jclass, jstring, jint);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    partitionUUID
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_partitionUUID(JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    partitionLabel
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_partitionLabel(JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    partitionBlockSize
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_partitionBlockSize(JNIEnv *, jclass, jstring);


/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    partitionAvailableSize
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_partitionAvailableSize(JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    swapOn
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_swapOn(JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    swapOff
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_swapOff(JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    partitionTableType
 * Signature: (Ljava/lang/String;)Lir/moke/jsysbox/disk/PartitionTable;
 */
JNIEXPORT jobject JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_partitionTableType(JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    initializePartitionTable
 * Signature: (Ljava/lang/String;Lir/moke/jsysbox/disk/PartitionTable;)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_initializePartitionTable(JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    createPartition
 * Signature: (Ljava/lang/String;IJJLjava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_createPartition(JNIEnv *, jclass, jstring, jint, jlong, jlong, jstring, jboolean);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    deletePartition
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_deletePartition(JNIEnv *, jclass, jstring, jint);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    bootable
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_bootable(JNIEnv *, jclass, jstring, jint);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    partitionCount
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_partitionCount(JNIEnv *, jclass, jstring);

/*
 * Class:     ir_moke_jsysbox_disk_JDiskManager
 * Method:    sync
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ir_moke_jsysbox_disk_JDiskManager_sync(JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
